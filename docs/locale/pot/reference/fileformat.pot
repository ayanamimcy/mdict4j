# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Hiroshi Miura
# This file is distributed under the same license as the mdict4j package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mdict4j 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-05 12:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../docs/reference/fileformat.md:1
msgid "File format specification"
msgstr ""

#: ../../../docs/reference/fileformat.md:3
msgid "Reference origin and license"
msgstr ""

#: ../../../docs/reference/fileformat.md:5
msgid "A fileformat.md here is the reference description from writemdict project with copyright by zhansliu, distributed under the MIT License, the term is attached as MIT.txt."
msgstr ""

#: ../../../docs/reference/fileformat.md:8
msgid "Introduction"
msgstr ""

#: ../../../docs/reference/fileformat.md:10
msgid "This is a description of version 2.0 of the MDX and MDD file format, used by the MDict dictionary software. The software is not open-source, nor is the file format openly specified, so the following description is based on reverse-engineering, and is likely incomplete and inaccurate in its details."
msgstr ""

#: ../../../docs/reference/fileformat.md:15
msgid "Most of the information comes from https://bitbucket.org/xwang/mdict-analysis. While xwang mostly focuses on being able to read this unknown format, I have added details that are necessary to also write MDX files."
msgstr ""

#: ../../../docs/reference/fileformat.md:19
msgid "Concepts"
msgstr ""

#: ../../../docs/reference/fileformat.md:21
msgid "MDX and MDD files are both designed to store an associative array of pairs (keyword, record)."
msgstr ""

#: ../../../docs/reference/fileformat.md:23
msgid "For MDX files, the information stored is typically a dictionary. The keyword and record are both (Unicode) strings, with the keyword being the headword for the dictionary entry, and the record giving a description of that word. An example of an MDX entry could be:"
msgstr ""

#: ../../../docs/reference/fileformat.md:25
msgid "keyword: \"reverse engineering\""
msgstr ""

#: ../../../docs/reference/fileformat.md:26
msgid "record: \"<i>noun:</i> a process of analyzing and studying an object or device, in order to understand its inner workings\""
msgstr ""

#: ../../../docs/reference/fileformat.md:28
msgid "MDD files are instead designed to store binary data. Typically, the keyword is a file path, and the record is the contents of that file. As an example, we may have:"
msgstr ""

#: ../../../docs/reference/fileformat.md:31
msgid "keyword: \"\\image.png\""
msgstr ""

#: ../../../docs/reference/fileformat.md:32
msgid "record: 0x89 0x50 0x4e 0x47 0x0d 0x0a 0x1a 0x0a..."
msgstr ""

#: ../../../docs/reference/fileformat.md:34
msgid "MDX files is designed to store a dictionary, i.e. a collection of pairs (keyword, record), which could be, for example, keyword=\"reverse engineering\", record=\"<i>noun:</i> a process of analyzing and studying an object or device, in order to understand its inner workings\"."
msgstr ""

#: ../../../docs/reference/fileformat.md:38
msgid "Typically, MDD files are associated with an MDX file of the same name (but with extension .mdx instead of .mdd), and contains resources to be included in the text of MDX files. For example, and entry of the MDX file might contain the HTML code <img src=\"/images/image.png\" />, in which case the MDict software will look for the entry \"\\image.png\" in the MDD file."
msgstr ""

#: ../../../docs/reference/fileformat.md:43
msgid "File structure"
msgstr ""

#: ../../../docs/reference/fileformat.md:45
msgid "The basic file structure is a follows:"
msgstr ""

#: ../../../docs/reference/fileformat.md:70
msgid "Header Section"
msgstr ""

#: ../../../docs/reference/fileformat.md:99
msgid "The header_str consists of a single, XML tag dictionary, with various attributes. For MDX files, they look like this: (newlines added for clarity)"
msgstr ""

#: ../../../docs/reference/fileformat.md:118
msgid "For MDD files, we have instead:"
msgstr ""

#: ../../../docs/reference/fileformat.md:136
msgid "The meaning of the attributes are explained below:"
msgstr ""

#: ../../../docs/reference/fileformat.md:209
msgid "Keyword Section"
msgstr ""

#: ../../../docs/reference/fileformat.md:211
msgid "The keyword section contains all the keywords in the dictionary, divided into blocks, as well as information about the sizes of these blocks."
msgstr ""

#: ../../../docs/reference/fileformat.md:275
msgid "Keyword header encryption:"
msgstr ""

#: ../../../docs/reference/fileformat.md:277
msgid "If the parameter Encrypted in the header has the lowest bit set (i.e. Encrypted | 1 is nonzero), then the 40-byte block from num_blocks are encrypted. The encryption used is Salsa20/8 (Salsa20 with 8 rounds instead of 20). In pseudo-Python:"
msgstr ""

#: ../../../docs/reference/fileformat.md:287
msgid "Here, encryption_key is the dictionary password specified on creation of the dictionary."
msgstr ""

#: ../../../docs/reference/fileformat.md:289
msgid "This encryption_key is not distributed directly. Instead it is further encrypted, using a piece of data, user_id, that is specific to the user or the client machine, according to the following scheme:"
msgstr ""

#: ../../../docs/reference/fileformat.md:293
msgid "The string user_id can be either an email address (\"example@example.com\") that the user enters into his/her MDict client, or a device ID (\"12345678-90AB-CDEF-0123-4567890A\") which the MDict client obtains in different ways depending on the platform. The choice of which one to use depends on the attribute RegisterBy in the file header. (See Header section.) In either case, user_id is an ASCII-encoded string. On certain platforms, the official MDict client seems to default to the DeviceID being the empty string."
msgstr ""

#: ../../../docs/reference/fileformat.md:296
msgid "The 128-bit reg_code is then distributed to the user. This can be done in two ways:"
msgstr ""

#: ../../../docs/reference/fileformat.md:298
msgid "If the MDX file is called dictionary.mdx, the dictionary reader should look for a file called dictionary.key in the same directory, which contains reg_code as a 32-digit hexadecimal string."
msgstr ""

#: ../../../docs/reference/fileformat.md:299
msgid "Otherwise, reg_code can be included in the header of the MDX file, as the attribute RegCode."
msgstr ""

#: ../../../docs/reference/fileformat.md:301
msgid "Keyword index"
msgstr ""

#: ../../../docs/reference/fileformat.md:303
msgid "The keyword index lists some basic data about the key blocks. It is compressed (see \"Compression\"), and possibly encrypted (see \"Keyword index encryption\"). After decompression and decryption, it looks like this:"
msgstr ""

#: ../../../docs/reference/fileformat.md:367
msgid "Keyword index encryption:"
msgstr ""

#: ../../../docs/reference/fileformat.md:369
msgid "If the parameter Encrypted in the header has its second-lowest bit set (i.e. Encrypted | 2 is nonzero), then the keyword index is further encrypted. In this case, the comp_type and checksum fields will be unchanged (refer to the section Compression), the following C function will be used to encrypt the compressed_data part, after compression."
msgstr ""

#: ../../../docs/reference/fileformat.md:381
msgid "The encryption key used is ripemd128(checksum + \"\\x95\\x36\\x00\\x00\"), where + denotes string concatenation."
msgstr ""

#: ../../../docs/reference/fileformat.md:383
msgid "Keyword blocks"
msgstr ""

#: ../../../docs/reference/fileformat.md:385
msgid "Each keyword is compressed (see \"Compression\"). After decompressing, they look like this:"
msgstr ""

#: ../../../docs/reference/fileformat.md:424
msgid "The offset should be interpreted as follows: Decompress all record blocks, and concatenate them together, and let records denote the resulting array of bytes. The record corresponding to key[i] then starts at records[offset[i]]."
msgstr ""

#: ../../../docs/reference/fileformat.md:427
msgid "Record section"
msgstr ""

#: ../../../docs/reference/fileformat.md:429
msgid "The record section looks like this:"
msgstr ""

#: ../../../docs/reference/fileformat.md:503
msgid "Record block"
msgstr ""

#: ../../../docs/reference/fileformat.md:505
msgid "Each record block is compressed (see \"Compression\"). After decompressing, they look like this:"
msgstr ""

#: ../../../docs/reference/fileformat.md:534
msgid "Compression:"
msgstr ""

#: ../../../docs/reference/fileformat.md:536
msgid "Various data blocks are compressed using the same scheme. These all look like these:"
msgstr ""

#: ../../../docs/reference/fileformat.md:565
msgid "The compression type can be indicated by comp_type. There are three options:"
msgstr ""

#: ../../../docs/reference/fileformat.md:567
msgid "If comp_type is '\\x00\\x00\\x00\\x00', then no compression is applied at all, and compressed_data is equal to data."
msgstr ""

#: ../../../docs/reference/fileformat.md:568
msgid "If comp_type is '\\x01\\x00\\x00\\x00', LZO compression is used."
msgstr ""

#: ../../../docs/reference/fileformat.md:569
msgid "If comp_type is '\\x02\\x00\\x00\\x00', zlib compression is used. It so happens that the zlib compression format appends an ADLER32 checksum, so in this case, checksum will be equal to the last four bytes of compressed_data."
msgstr ""

